<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAYAAAByDd+UAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAyBJREFUSEvFlt9L
        k1EYx+dF6Mz+gMAo6ibqoitRKMjdSb8kIUEvshvBKwlKw4JKL6YkBE3SJkWT1mJlPwyqMY1F6GTMdFFj
        U7ZwhskCTZpkiPDk97FnO3v3mogsX3jY2bvt+Zzv93zP2WswbNV17vYEGSqHslLcW71wY2fD5qqlP0EH
        22a5jzperCgkl2kXpUFzyhyUa+rZVNU6E1TYGOUe6ni4uojOnKojMJIi8aZgf0NWKw2Yd9pN0/H5ZI3H
        4iSl3tcbx77NEUq+H/4Sp1B0tQLhaa4PwSnaVt6fUgjg0vIyF3544VYvldS0Uk2zjce4J5//6zXx6zeh
        Zn8scMkEL7fb2eqkpQJE47o2B9Wa7TzDwUCUxwCvB9WDifoMYG7FACuAGjQfnflEV8euUEvgOvmiITLV
        3aSHLv+aKucTi4RSlak26wKhoPismUbCUwzb69hN+xx7qGu8k+72een4+Q4G1lsjGyo4pWsp/IYS12CI
        lQGWcymHnJOPqLXHRZVN3RkKtcq0AZLwMPCINXMNRQlsBOhJ7DE9947wRLCeamDWshFQNalIKANL7+uH
        pqP3PQMAhzKM3b5wEibhUIFwR9YMMAEClgSmKSx/nbYtnroDnE4kVqsMQIFJ7FUYbBQQXodGo6sKVaDx
        5Mt195mqTN1jKiwYmeHtBNBwYJJh6wLVjQ87YTGaaC3U2ojvIOGiTmAe34SOwmPPkqcMbEShgWcsurId
        Osn84C03WkuZno0AAuYeCjMw73BXKjTGv0Bs/OpmB6tBIhNLRP6J7xwcywt/xlmrTaOsmQp79e5zJjDf
        ZONkycYHCDW3SPT1J9ENp5fK6i0MrGoLbaj6Bj4y0FhiSSkEEAsOJZiRwOILq8DGOy46cbFb9x8B4UCS
        VVU4PNAHMCQewB3F7elAWIiAQAlsFJhtIMgTsXkiDJTTQ8KhphHrpYXpA0vv8ZqhGQICAGyEMoy73gQz
        Tg+99dKDCTD/UEtKYcFRK/+PISxohIBUXbNzgDajDDABbj/QlALCX8DgdbYqDYjnGUPRyqJmsZghV7Yf
        oKT/Vj1z/1/uH5AtcrVQ9tqjAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="cmdCarpeta.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAORJREFUOE9jYBg+
        oLEy+z8yJslnII3fPlWjYJAY0YZgMwBkILqrcLoQlwHoroLxMVyHbMDTB5X/Vy8pwms7hkuQDQBpXj0z
        /v+3Sz4QfMHz/5fzbv/fH7H6/3qP8f9XO3T/P9+o9n9/BdP/vlQdSDjBDADZ3t9e8f/p0QCwZpBGDM1b
        NP7fXSyD0IxsALrt2DQ/XaMItn1VdwIilkAuQLYdl80gzQ8WiqHaDnMBzHaY5rf7TcB+frldB+xnkOZH
        y2QwbYcZsGl+7P9dHXJgBfgwPOCQUxnIC+WuDAQxVs1EJ1ccCgEoyoDdr6oZ+gAAAABJRU5ErkJggg==
</value>
  </data>
</root>