<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SyntaxSQL.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>229, 17</value>
  </metadata>
  <data name="SyntaxSQL.DefinitionXml" xml:space="preserve">
    <value>&lt;?xml version="1.0"?&gt;
&lt;SyntaxLanguages&gt;
	&lt;!-- SQL Language Definition --&gt;
	&lt;SyntaxLanguage Key="SQL" LanguageDefinitionVersion="4.0" Secure="False" WordContainsAdditionalCharacters="@_" xmlns="http://ActiproSoftware/SyntaxEditor/4.0/LanguageDefinition"&gt;
		&lt;!-- String Properties --&gt;
		&lt;Properties&gt;
			&lt;Property Key="Creator" Value="Actipro Software LLC" /&gt;
			&lt;Property Key="Copyright" Value="Copyright (c) 2001-2009 Actipro Software LLC.  All rights reserved." /&gt;
		&lt;/Properties&gt;
		&lt;!-- Triggers --&gt;
		&lt;Triggers /&gt;
		&lt;!-- Highlighting Styles --&gt;
		&lt;Styles&gt;
			&lt;Style Key="DefaultStyle" Name="Text" ForeColor="#000000" BorderColor="#000000" StrikeOutColor="#000000" UnderlineColor="#000000" /&gt;
			&lt;Style Key="ReservedWordStyle" Name="Reserved Word" ForeColor="#0000FF" /&gt;
			&lt;Style Key="FunctionStyle" Name="Function" ForeColor="#FF00FF" /&gt;
			&lt;Style Key="OperatorStyle" Name="Operator" ForeColor="#808080" /&gt;
			&lt;Style Key="DataTypeStyle" Name="Data Type" ForeColor="#0000FF" /&gt;
			&lt;Style Key="VariableStyle" Name="Variable" ForeColor="#008000" /&gt;
			&lt;Style Key="SystemVariableStyle" Name="System Variable" ForeColor="#008000" Bold="True" /&gt;
			&lt;Style Key="NumberStyle" Name="Number" ForeColor="#800000" Bold="True" /&gt;
			&lt;Style Key="StringDelimiterStyle" Name="String Delimiter" ForeColor="#FF0000" /&gt;
			&lt;Style Key="StringDefaultStyle" Name="String Default" ForeColor="#FF0000" /&gt;
			&lt;Style Key="SquareStringDelimiterStyle" Name="Square String Delimiter" ForeColor="#000000" /&gt;
			&lt;Style Key="SquareStringDefaultStyle" Name="Square String Default" ForeColor="#000000" /&gt;
			&lt;Style Key="CommentDelimiterStyle" Name="Comment Delimiter" ForeColor="#008080" /&gt;
			&lt;Style Key="CommentDefaultStyle" Name="Comment Default" ForeColor="#008080" /&gt;
		&lt;/Styles&gt;
		&lt;!-- Macros --&gt;
		&lt;Macros /&gt;
		&lt;!-- States --&gt;
		&lt;States&gt;
			&lt;!-- DefaultState State --&gt;
			&lt;State Key="DefaultState" TokenKey="DefaultToken" Style="DefaultStyle"&gt;
				&lt;!-- Pattern Groups --&gt;
				&lt;PatternGroups&gt;
					&lt;RegexPatternGroup TokenKey="WhitespaceToken" PatternValue="{WhitespaceMacro}+" IsWhitespace="True" /&gt;
					&lt;RegexPatternGroup TokenKey="LineTerminatorToken" PatternValue="{LineTerminatorMacro}" IsWhitespace="True" /&gt;
					&lt;ExplicitPatternGroup Key="OpenParenthesisPatternGroup" TokenKey="OpenParenthesisToken" PatternValue="(" EndBracket="CloseParenthesisPatternGroup" /&gt;
					&lt;ExplicitPatternGroup Key="CloseParenthesisPatternGroup" TokenKey="CloseParenthesisToken" PatternValue=")" StartBracket="OpenParenthesisPatternGroup" /&gt;
					&lt;ExplicitPatternGroup TokenKey="ReservedWordToken" Style="ReservedWordStyle" LookAhead="{NonWordMacro}|\z"&gt;
						&lt;ExplicitPatterns&gt;
							ADD ALTER AS ASC AUTHORIZATION BACKUP BEGIN BREAK BROWSE BULK 
							BY CASCADE CHECK CHECKPOINT CLOSE CLUSTERED COLUMN COMMIT COMMITTED COMPUTE 
							CONFIRM CONSTRAINT CONTAINS CONTINUE CONTROLROW CREATE CROSS CURRENT CURRENT_DATE CURRENT_TIME 
							CURSOR DATABASE DBCC DEALLOCATE DECLARE DEFAULT DELETE DENY DESC DISK 
							DISTINCT DISTRIBUTED DROP DUMMY DUMP ELSE END ERRLVL ERROREXIT ESCAPE 
							EXCEPT EXEC EXECUTE EXIT FETCH FILE FILLFACTOR FLOPPY FOR FOREIGN 
							FREETEXT FROM FULL FUNCTION GO GOTO GRANT GROUP HAVING HOLDLOCK 
							IDENTITY_INSERT IDENTITYCOL IF INDEX INNER INSERT INTERSECT INTO IS ISOLATION 
							KEY KILL LEVEL LINENO LOAD MIRROREXIT NEXT NOCHECK NONCLUSTERED NULL 
							OF OFF OFFSETS ON ONCE ONLY OPEN OPENDATASOURCE OPTION ORDER 
							OVER PERCENT PERM PERMANENT PIPE PLAN PREPARE PRIMARY PRINT PRIVILEGES 
							PROC PROCEDURE PROCESSEXIT PUBLIC RAISERROR READ READTEXT RECONFIGURE REFERENCES REPEATABLE 
							REPLICATION RESTORE RESTRICT RETURNS RETURN REVOKE ROLLBACK ROWCOUNT ROWGUIDCOL RULE 
							SAVE SCHEMA SELECT SERIALIZABLE SET SETUSER SHUTDOWN STATISTICS TABLE TAPE 
							TEMP TEMPORARY TEXTSIZE THEN TO TOP TRAN TRANSACTION TRIGGER TRUNCATE 
							TSEQUAL UNCOMMITTED UNION UNIQUE UPDATE UPDATETEXT USE VALUES VIEW WAITFOR 
							WHEN WHERE WHILE WITH WORK WRITETEXT 
						&lt;/ExplicitPatterns&gt;
					&lt;/ExplicitPatternGroup&gt;
					&lt;ExplicitPatternGroup TokenKey="FunctionToken" Style="FunctionStyle" LookAhead="{NonWordMacro}|\z"&gt;
						&lt;ExplicitPatterns&gt;
							ABS ACOS APP_NAME ASCII ASIN ATAN ATN2 AVG CASE CAST 
							CEILING CHARINDEX COALESCE COL_LENGTH COL_NAME COLUMNPROPERTY CONTAINSTABLE CONVERT COS COT 
							COUNT CURRENT_TIMESTAMP CURRENT_USER CURSOR_STATUS DATABASEPROPERTY DATALENGTH DATEADD DATEDIFF DATENAME DATEPART 
							DAY DB_ID DB_NAME DEGREES DIFFERENCE EXP FILE_ID FILE_NAME FILEGROUP_ID FILEGROUP_NAME 
							FILEGROUPPROPERTY FILEPROPERTY FLOOR FORMATMESSAGE FREETEXTTABLE FULLTEXTCATALOGPROPERTY FULLTEXTSERVICEPROPERTY GETANSINULL GETDATE GROUPING 
							HOST_ID HOST_NAME IDENT_INCR IDENT_SEED IDENTITY INDEX_COL INDEXPROPERTY IS_MEMBER IS_SRVROLEMEMBER ISDATE 
							ISNULL ISNUMERIC LEN LOG LOG10 LOWER LTRIM MAX MIN MONTH 
							NEWID NULLIF OBJECT_ID OBJECT_NAME OBJECTPROPERTY OPENQUERY OPENROWSET PARSENAME PATINDEX PERMISSIONS 
							PI POWER QUOTENAME RADIANS RAND REPLACE REPLICATE REVERSE ROUND RTRIM 
							SCOPE_IDENTITY SESSION_USER SIGN SIN SOUNDEX SPACE SQRT SQUARE STATS_DATE STDEV 
							STDEVP STR STUFF SUBSTRING SUM SUSER_ID SUSER_NAME SUSER_SID SUSER_SNAME SYSTEM_USER 
							TAN TEXTPTR TEXTVALID TYPEPROPERTY UNICODE UPPER USER USER_ID USER_NAME VAR 
							VARP YEAR 
						&lt;/ExplicitPatterns&gt;
					&lt;/ExplicitPatternGroup&gt;
					&lt;ExplicitPatternGroup TokenKey="OperatorToken" Style="OperatorStyle"&gt;
						&lt;ExplicitPatterns&gt;
							+ - * / % ~ &amp;amp; | ^ = 
							&amp;gt; &amp;lt; &amp;gt;= &amp;lt;= &amp;lt;&amp;gt; != !&amp;gt; !&amp;lt; 
						&lt;/ExplicitPatterns&gt;
					&lt;/ExplicitPatternGroup&gt;
					&lt;ExplicitPatternGroup TokenKey="OperatorToken" Style="OperatorStyle" LookAhead="{NonWordMacro}|\z"&gt;
						&lt;ExplicitPatterns&gt;
							ALL AND ANY BETWEEN EXISTS IN LEFT JOIN LIKE NOT 
							OR OUTER RIGHT SOME 
						&lt;/ExplicitPatterns&gt;
					&lt;/ExplicitPatternGroup&gt;
					&lt;ExplicitPatternGroup TokenKey="DataTypeToken" Style="DataTypeStyle" LookAhead="{NonWordMacro}|\z"&gt;
						&lt;ExplicitPatterns&gt;
							bigint binary bit char character datetime dec decimal double float 
							int integer image long money national nchar ntext number nvarchar 
							precision raw real single smalldatetime smallint smallmoney text timestamp tinyint 
							uniqueidentifier varbinary varchar varchar2 varying 
						&lt;/ExplicitPatterns&gt;
					&lt;/ExplicitPatternGroup&gt;
					&lt;RegexPatternGroup TokenKey="IdentifierToken" PatternValue="{AlphaMacro}({WordMacro})*" /&gt;
					&lt;RegexPatternGroup TokenKey="VariableToken" Style="VariableStyle" PatternValue="@ {WordMacro}+" LookAhead="{NonWordMacro}|\z" /&gt;
					&lt;RegexPatternGroup TokenKey="SystemVariableToken" Style="SystemVariableStyle" PatternValue="@@ {WordMacro}+" LookAhead="{NonWordMacro}|\z" /&gt;
					&lt;RegexPatternGroup TokenKey="NumberToken" Style="NumberStyle" PatternValue="{DigitMacro}+ (\. {DigitMacro}+)?" LookAhead="{NonWordMacro}|\z" /&gt;
					&lt;RegexPatternGroup TokenKey="HexNumberToken" Style="NumberStyle" PatternValue="0 [x | X] {HexDigitMacro}+" LookAhead="{NonWordMacro}|\z" /&gt;
				&lt;/PatternGroups&gt;
				&lt;!-- Child States --&gt;
				&lt;ChildStates&gt;
					&lt;ChildState Key="StringState" /&gt;
					&lt;ChildState Key="SquareStringState" /&gt;
					&lt;ChildState Key="CommentState" /&gt;
					&lt;ChildState Key="MultiLineCommentState" /&gt;
				&lt;/ChildStates&gt;
			&lt;/State&gt;
			&lt;!-- StringState State --&gt;
			&lt;State Key="StringState" TokenKey="StringDefaultToken" Style="StringDefaultStyle"&gt;
				&lt;!-- Scopes --&gt;
				&lt;Scopes&gt;
					&lt;Scope&gt;
						&lt;ExplicitPatternGroup Type="StartScope" TokenKey="StringStartToken" Style="StringDelimiterStyle" PatternValue="'" /&gt;
						&lt;ExplicitPatternGroup Type="EndScope" TokenKey="StringEndToken" Style="StringDelimiterStyle" PatternValue="'" /&gt;
					&lt;/Scope&gt;
				&lt;/Scopes&gt;
				&lt;!-- Pattern Groups --&gt;
				&lt;PatternGroups&gt;
					&lt;RegexPatternGroup TokenKey="StringDefaultToken" PatternValue="[^']+" /&gt;
				&lt;/PatternGroups&gt;
			&lt;/State&gt;
			&lt;!-- SquareStringState State --&gt;
			&lt;State Key="SquareStringState" TokenKey="SquareStringDefaultToken" Style="StringDefaultStyle"&gt;
				&lt;!-- Scopes --&gt;
				&lt;Scopes&gt;
					&lt;Scope&gt;
						&lt;ExplicitPatternGroup Type="StartScope" TokenKey="SquareStringStartToken" Style="StringDelimiterStyle" PatternValue="[" /&gt;
						&lt;ExplicitPatternGroup Type="EndScope" TokenKey="SquareStringEndToken" Style="StringDelimiterStyle" PatternValue="]" /&gt;
					&lt;/Scope&gt;
				&lt;/Scopes&gt;
				&lt;!-- Pattern Groups --&gt;
				&lt;PatternGroups&gt;
					&lt;RegexPatternGroup TokenKey="SquareStringDefaultToken" PatternValue="[^\]]+" /&gt;
				&lt;/PatternGroups&gt;
			&lt;/State&gt;
			&lt;!-- CommentState State --&gt;
			&lt;State Key="CommentState" TokenKey="CommentDefaultToken" Style="CommentDefaultStyle"&gt;
				&lt;!-- Scopes --&gt;
				&lt;Scopes&gt;
					&lt;Scope&gt;
						&lt;RegexPatternGroup Type="StartScope" TokenKey="RegionStartToken" Style="CommentDelimiterStyle" PatternValue="-- {WhitespaceMacro}* Region" LookAhead="{NonWordMacro}|\z" /&gt;
						&lt;RegexPatternGroup Type="EndScope" TokenKey="CommentStringEndToken" Style="CommentDelimiterStyle" PatternValue="{LineTerminatorMacro}" /&gt;
					&lt;/Scope&gt;
					&lt;Scope&gt;
						&lt;RegexPatternGroup Type="StartScope" TokenKey="EndRegionStartToken" Style="CommentDelimiterStyle" PatternValue="-- {WhitespaceMacro}* End {WhitespaceMacro}? Region" LookAhead="{NonWordMacro}|\z" /&gt;
						&lt;RegexPatternGroup Type="EndScope" TokenKey="CommentStringEndToken" Style="CommentDelimiterStyle" PatternValue="{LineTerminatorMacro}" /&gt;
					&lt;/Scope&gt;
					&lt;Scope&gt;
						&lt;ExplicitPatternGroup Type="StartScope" TokenKey="CommentStartToken" Style="CommentDelimiterStyle" PatternValue="--" /&gt;
						&lt;RegexPatternGroup Type="EndScope" TokenKey="CommentStringEndToken" Style="CommentDelimiterStyle" PatternValue="{LineTerminatorMacro}" /&gt;
					&lt;/Scope&gt;
				&lt;/Scopes&gt;
				&lt;!-- Pattern Groups --&gt;
				&lt;PatternGroups&gt;
					&lt;RegexPatternGroup TokenKey="CommentDefaultToken" PatternValue="{NonLineTerminatorMacro}+" /&gt;
				&lt;/PatternGroups&gt;
			&lt;/State&gt;
			&lt;!-- MultiLineCommentState State --&gt;
			&lt;State Key="MultiLineCommentState" TokenKey="MultiLineCommentDefaultToken" Style="CommentDefaultStyle"&gt;
				&lt;!-- Scopes --&gt;
				&lt;Scopes&gt;
					&lt;Scope BracketHighlight="True"&gt;
						&lt;ExplicitPatternGroup Type="StartScope" TokenKey="MultiLineCommentStartToken" Style="CommentDelimiterStyle" PatternValue="/*" EndBracket="" /&gt;
						&lt;ExplicitPatternGroup Type="EndScope" TokenKey="MultiLineCommentEndToken" Style="CommentDelimiterStyle" PatternValue="*/" StartBracket="" /&gt;
					&lt;/Scope&gt;
				&lt;/Scopes&gt;
				&lt;!-- Pattern Groups --&gt;
				&lt;PatternGroups&gt;
					&lt;RegexPatternGroup TokenKey="MultiLineCommentDefaultToken" PatternValue="[^\*]+" /&gt;
				&lt;/PatternGroups&gt;
			&lt;/State&gt;
		&lt;/States&gt;
		&lt;!-- Example Text --&gt;
		&lt;ExampleText&gt;&lt;![CDATA[/* 
 * Stored Procedure 
 */		
CREATE PROCEDURE titles_sum
	@TITLE varchar(40) = '%',
	@SUM money OUTPUT
AS

-- Region Variable Declarations
declare @Unused int
-- End Region

-- Select records
SELECT @SUM = SUM(price)
FROM [book titles]
WHERE title LIKE @TITLE
IF @@ERROR &lt;&gt; 0
	PRINT 'An error occurred']]&gt;&lt;/ExampleText&gt;
	&lt;/SyntaxLanguage&gt;
&lt;/SyntaxLanguages&gt;</value>
  </data>
  <metadata name="mnuRibbon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>334, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RibbonControl.ApplicationIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIAAgAPcAAHJwb3NxcHRycXV0c3h2dXl3dnt5eHx6eYB/fiGpTCKpTSOqTiWqTyaqUCerUSmr
        UiqrUyurUyysVC2sVS6sVjKtWTauXDeuXDiuXTyvYECwY0KwZEKwZUmxak2ybU6zbk+zb1a0dFe0dVi0
        dVm1dlq1d1u1d2K3fWO3fWW3f4KAf2a3gGi4gWm4gm25hW+5h3C5h3G6iHO6iXO6inS6ine7jXi7jXm7
        jnq7j3i8jny8kH68kX68koOCgYaFhIiHhomHhomHh4qJiIuJiYyKio+OjZCOjpCPjpGPj5GQkJKRkJST
        kpWUk5WUlJaVlZeWlZiXlpmYmKCfnqCfn4C9k4K9lIS+loW+l4a+mIe+mIi+mYm/moy/nI2/nY6/naGg
        oKOupaavqKqpqKyrq6ysq62srK6ura+urq6yr7Cwr7GwsLKxsbKysrOzs7K0srS0s7WztLW0tLW1tba1
        tba2tre3tre3t7m1uLm2uLm3uLu2uby2ubi4uLm4uLm5ubq5ubq6uru6uru7uru7u7y7u7y8u728vL29
        vb69vb+9vr6+vr+/vr+/v8C/v4/AnpDAn5LAoJPBoZTBopbBo5bBpJnCppvCqJzCqJ3DqZ7Dqp/Dqp/D
        q6DDq6HDrKPEraPErqXEr6bFsKfFsKfFsajFsanFsqrFs6vFs6zGtK7GtrHHuLLHubPHubPHurTHurXH
        u7XIu7fIvLfIvbnIvrvJv8DAv7zJwL3Jwb/KwsHAwMHBwcLBwcLCwsPDwsPDw8XExMXFxcbFxcbGxsfG
        xsfHxsfHx8DKw8LKxcPKxcTLxsXLx8bLx8bLyMfLyMjIyMnJycrJycjLycrKysvKysvLy8rMysrMy8vM
        y8zMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH5BAEAANgALAAAAAAgACAAAAj/ALEJHEiwoMGDCBMqXMiwocOHECNKnEixosWEhQwcIJLGICcSLCIx
        gxgIQI8DAKBQI6glAYMEG049FATgTLEoAKawTADKC4UKrhzSJCOwyIBcA7MkeIWtlIMQDkuOEUgIwJeB
        WBKwEigjQaqGgACUGagCSNIEqwSqUsADLAAxz5w9Q3LgmcCWsQZaMNEwUAACBgILMFBMIJcEIlCcQBGh
        Q98APpQoSdKEzkBKCSBM2JzhkVszAwPVKYwtVAIuyFJ/koXNFiqFJYkKHAIAASNstxy0GAiCRLISVBSG
        nSpQiA8DTgSOiLAV2w4JHyTAgg2AOLYgS6QwEZgqAoZK1Y5RQkgwaeHwgT+MYJM2kNOFBBpSPGDgAZJC
        RgXYDDzyxCAuKhw0YIUnHCywkC8rCSQMaQZdM8tFEEYo4YQUVmjhhRUFBAA7
</value>
  </data>
  <metadata name="LookAndFeelApp.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="icGeneral.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v7.2" name="DevExpress.Utils.v7.2, Version=7.2.4.0, Culture=neutral, PublicKeyToken=9b171c9fd64da1d1" />
  <data name="icGeneral.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v7.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFhEZXZFeHByZXNzLlV0aWxzLnY3LjIsIFZlcnNpb249Ny4yLjQu
        MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05YjE3MWM5ZmQ2NGRhMWQxDAMAAABRU3lz
        dGVtLkRyYXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
        bj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAoRGV2RXhwcmVzcy5VdGlscy5JbWFnZUNvbGxlY3Rpb25TdHJl
        YW1lcgIAAAAJSW1hZ2VTaXplBERhdGEEBxNTeXN0ZW0uRHJhd2luZy5TaXplAwAAAAICAAAABfz///8T
        U3lzdGVtLkRyYXdpbmcuU2l6ZQIAAAAFd2lkdGgGaGVpZ2h0AAAICAMAAAAQAAAAEAAAAAkFAAAADwUA
        AABOBgAAAiADAACJUE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EAAAABc1JHQgCuzhzpAAAA
        BGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAC
        nklEQVQ4T3WTS0iUURTHz6jjq9dYmpKvdNIxR2Z0VMSBxNAKK4JgIiU0yCAH0cggey1qIZEtShct2gwN
        Ua3KFi2K3OkiREazh5mvMJWZGs1BQmzm+/edk1+MSAcu9/su/H//c849VwcrGRBJHgW0OwiioEIUWlv8
        Lf/aubqHQuoZqYt3hZyk2GgKXReBu61ApxPoaARu1APXTgLtx4ELR4GWg8C5SuCMHagvBWqtwAkzpu0Z
        ixQsIuDeeSiXD2O17RB+tVQj4NwPf+M+eBvs+FZXhmlHCb4csWC0KhfvqvPhqTQBxYSZSiNopVAF3HGK
        ePWUFcolB4K3muGvycLsmnjigAlzzQ74bl+Bx5yAgXKjAL5WZIGWLQSl46w4s1iLlecu1SFdnFmshe+p
        C/05BgFM2TNASwUq4OZpSZudwyPg7hZx0Df/73h5xIM+S7oAJstSQQv5hND1OqmZ02bn/wWLexMj0Ls3
        RQDjJSkgX54KaHdIw2ZryyTtwMPuDQwWv62wivh1brIAxoqSQHO5hGDbsXXdDq9ZI809duFNxla8UsUv
        sxIFMGrZAZrJUQGtNXJVWrfDaw5PZfJ+F14kb0ZPaoIAPpkNoCkj4XdT1YZus5DTZufwmHC78GRbrADe
        520BjWergMYKGRJv59V13eaaOW121sI/5IE7Ti+AkZx40OdMwmpD+d8JK9wJvufwbnPNnDY7s/iBTgf3
        pmgBDGfHgD4woK5YxnPAvgf9pu1yz1q3uWE9aQmSNjuz2BUTJYChTD1oOE0dZfVhBErjsFQSh5+2WCza
        YrBQGA2/VY8fFj2+F0TBa46ENz8C83k6zJt0AhhMiwAN7qImflX8MHi2eTwn1AnjIRmzJclVfSwwSMO4
        Zk6bnVn8LJ4e/QGrB5bZtjse5wAAAABJRU5ErkJggiYDAACJUE5HDQoaCgAAAA1JSERSAAAAEAAAABAI
        BgAAAB/z/2EAAAABc1JHQgCuzhzpAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA
        6AAAdTAAAOpgAAA6mAAAF3CculE8AAACpElEQVQ4T3VTS0hUYRQ+ggsXLhIKLFrMIsJNYES060GhE0iS
        lZlFga/KSkwsLQushBJMN1GDYmOI+SAzylJrbMxMS2muj4m0zBkrZqbUruZj8jF+3XOGkUT74cL89/I9
        zne+8aPlTvy7TO31cfJ4dNpDNI9R8sw9Ij+/XCrf0bsshl8GpVrSk0rtam3XKNTJOfiOe8YDxT6OnOoB
        9+o4cwntr1+3lCSpw1jSOiwYswMIrZgF5U+Aro8gOP8nClrG4J6dhzoxg42pzcoigqA0SzqDnVNAjAnw
        z/+NDTddiC52Ivbud+zMGwCdVBCa2w/l2xQ6B8aw8mBtG0XWrBAits3KDKZbM4gqdGFycmEC+fGsfQR0
        7A0osQMfHVMwdw2BdlWlEmmB1VtHxbb/ba/ty9UO2Ib+4EhRP0IuKLAOetnWnmoFHW1BQmGf3MPON5mY
        wMaB/TszZfSDkjtBp7uxPrkNw6pHZg+IbQTFvERwnFkIMgwWlQIS38pFArvxC3TVCcoaBJ37jK1XPuDH
        kAdW+xhCU16Bok2gvXWgiMeCyTZ2g3RpHV4CLW0BX7QLmE5YUNbokm8C1pR9YG12L0Gx5pION6u8Z16V
        T5lSrKCEdhTVfYXNpTmLfLoIHKivFIIsw3s3acxGLgnvWZTP9Ig6p70mtgGb4jXbu2vENivTtjLozz4X
        grhr3IdD5pDsqi9uLgnv2QemfQ1oVlRMTwNRl14vgGlLMR402mBzjGNVeGme9IDrySlzSViZV0UHXiDT
        YIHySWtiRKUoM9j4pA/u6Tno9pRr9zs6byO1bnM9uWFckoTCXlkV6R+Ctt9HYHiF2GZlBqcVtDlps0G/
        5P/A9eSG/e+wbVFeDixs3G2tnmEZTSYuSc69HlkVp82BycwLtr36fwGX8liE0OegNQAAAABJRU5ErkJg
        ggs=
</value>
  </data>
</root>