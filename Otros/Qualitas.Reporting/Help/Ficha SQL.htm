<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Ficha SQL</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">

</head>

<BODY>
<P><FONT face=Arial size=2><IMG alt="" src="IMAGES/DisenoSQL.png"></FONT></P>
<P><FONT face=Tahoma size=2>La ficha SQL en el diseño de la consulta provee el 
espacio para la redacción de las instrucciones SQL que serán enviadas al motor 
de bases de datos.<BR>Nótese que en la barra de herramientas de diseño, se 
habilitan los botones para alternar entre los cuadros de texto de los distintos 
componentes de instrucciones, a saber:</FONT></P>
<UL>
  <LI><FONT face=Tahoma size=2><STRONG>Instruccion SQL 
  Previa<BR></STRONG>Contiene las instrucciones que se enviarán en primer 
  instancia al servidor de base de datos. No forman parte de ninguna 
  transacción, y pueden ser utilizadas para, por ejemplo, la creación de una 
  tabla temporal.</FONT> 
  <LI><FONT face=Tahoma size=2><STRONG>Instrucción SQL Posterior<BR></STRONG>A 
  diferencia de la previa, contiene el texto SQL que se enviará una vez 
  procesado el núcleo de&nbsp;la consulta (Instrucciones inicial y final). 
  Continuando con el ejemplo anterior, puede utilizarse para eliminar objetos y 
  tablas temporales.</FONT> 
  <LI><FONT face=Tahoma size=2><STRONG>Instruccion SQL 
  Inicial<BR></STRONG>Conforma la primer parte de la instrucción. Para el caso 
  de una consulta simple, en ella se escribirán las selecciones, tablas o vistas 
  que intervienen, uniones entre éstas y las condiciones prefijadas de 
  antemano.</FONT> 
  <LI><FONT face=Tahoma size=2><STRONG>Instrucción SQL Final</STRONG><BR>En ella 
  se terminará de completar la instrucción inicial, consignando las cláusulas de 
  ordenamiento y agrupamiento (de ser necesarias).</FONT></LI></UL>
<P><FONT face=Tahoma size=2>Para los casos en los que el diseñador de la 
consulta no se encuentre familiarizado con el lenguaje SQL, <STRONG>Qualitas 
Reporting</STRONG> ofrece un diseñador visual de consultas, tema que será 
tratado más adelante en este capítulo.</FONT></P>
<P><FONT face=Tahoma size=4><STRONG>Ejemplo de diseño de consulta simple (SQL 
ANSI-92)</STRONG></FONT></P>
<P><FONT face=Tahoma size=2>Se asume que se cuenta conexión a una base de datos 
que contiene una tabla llamada TABLA, con los campos CAMPO1, CAMPO2 y CAMPO3. Se 
requiere diseñar una consulta que muestre el CAMPO1 y el CAMPO2, ordenada por 
este último, y permitirle al usuario aplicar un filtro sobre el CAMPO3. 
Entonces:</FONT></P>
<P><FONT face=Tahoma size=2><STRONG>Instruccion SQL inicial:</STRONG></FONT></P>
<P><FONT face=Tahoma size=2><FONT face=Courier>SELECT&nbsp;&nbsp;&nbsp; CAMPO1, 
CAMPO2<BR>FROM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
TABLA<BR>WHERE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 = 1</FONT></FONT></P><FONT 
face=Tahoma>
<P><FONT face=Tahoma size=2><STRONG>Instruccion SQL final:</STRONG></FONT></P>
<P><FONT face=Tahoma><FONT face=Courier size=2>ORDER BY&nbsp; CAMPO3 
ASC</FONT></FONT></P>
<P><FONT size=2>En este momento, estaría faltando la posibilidad de aplicar el 
filtro por el CAMPO3, lo cual se profundizará más adelante en Parámetros de la 
consulta.<BR>Con esto se quiere dar a entender, que los parámetros que se 
definan serán, una&nbsp;vez procesadas las variables y los tipos 
de&nbsp;datos,&nbsp;inyectados en la instrucción SQL entre la INICIAL y la 
FINAL. <BR>Nótese que de manera forzada en este ejemplo, se ha incluido en la 
instrucción inicial&nbsp;"<FONT 
face=Courier>WHERE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 = 1"</FONT>&nbsp;, dado que en 
caso de desconocer que cantidad de filtros se aplicarán, no será necesario 
evaluar cuando se encuentre en el primero o no, para saber cuando indicar WHERE 
en lugar de AND.<BR>Si asumimos que el usuario, al momento de ejecutar la 
consulta consigna el valor "55" para el único parámetro definido, el procesador 
de consultas lo transformará de esta manera:</FONT></P>
<P><FONT face=Courier size=2>AND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CAMPO3 = 
55.00</FONT></P>
<P><FONT size=2>Con lo cual la instrucción que será enviada al motor de bases de 
datos será:</FONT></P><FONT face=Courier><FONT color=#000080>
<TABLE style="BORDER-COLLAPSE: collapse" borderColor=#000000 cellSpacing=0 
cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD><FONT color=#000080 size=2>SELECT&nbsp;&nbsp;&nbsp; CAMPO1, 
      CAMPO2<BR>FROM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      TABLA<BR>WHERE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 = 1</FONT></TD>
    <TD><FONT size=2>&nbsp;<FONT face=Tahoma color=#000080><STRONG>Instrucción 
      SQL Inicial</STRONG></FONT></FONT></TD></TR>
  <TR>
    <TD><FONT size=2><FONT 
      color=#ff00ff>AND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CAMPO3 = 
      55.00</FONT>&nbsp;</FONT></TD>
    <TD><FONT size=2>&nbsp;<FONT face=Tahoma 
      color=#ff00ff><STRONG>Transformación de 
    parámetros</STRONG></FONT></FONT></TD></TR>
  <TR>
    <TD><FONT size=2><FONT color=#008080>ORDER BY&nbsp; CAMPO3 
      ASC</FONT>&nbsp;</FONT></TD>
    <TD><FONT size=2>&nbsp;<FONT face=Tahoma color=#008080><STRONG>Instrucción 
      SQL Final</STRONG></FONT></FONT></TD></TR></TBODY></TABLE>
<P></FONT><STRONG><FONT face=Tahoma color=#000000 size=4>Ejemplo de diseño de 
consulta con un procedimiento almacenado 
(T-SQL)</FONT></STRONG></FONT></FONT></P>
<P><FONT face=Tahoma size=2>Asumiendo que se cuenta con una base de datos con un 
procedimiento almacenado llamado P_MiProcedimiento, y que el mismo espera una 
variable numérica requerida llamada @MiVariable:</FONT></P><FONT face=Tahoma 
size=2>
<P><FONT face=Tahoma size=2><STRONG>Instruccion SQL inicial:</STRONG></FONT></P>
<P><FONT face=Tahoma size=2><FONT face=Courier>DECLARE @MiVariable 
NUMERIC(10)<BR></FONT></FONT><FONT face=Tahoma size=2><FONT face=Courier>SET 
@MiVariable = NULL</FONT></FONT></P><FONT face=Tahoma>
<P><FONT face=Tahoma size=2><STRONG>Instruccion SQL final:</STRONG></FONT></P>
<P><FONT face=Tahoma><FONT face=Courier size=2>EXEC P_MiProcedimiento 
@MiVariable</FONT></FONT></FONT></FONT></P>
<P><FONT face=Tahoma size=2>Para este caso, asumiendo nuevamente que el usuario 
ingresa el valor 55, el diseñador deberá procurar que el único parámetro&nbsp;de 
la consulta transforme e inyecte la instrucción faltante en el siguiente 
código:</FONT></P>
<P><FONT face=Courier size=2>SET @MiVariable = 55.00</FONT></P><FONT face=Tahoma 
size=2>
<P><FONT size=2>De este modo, la instrucción que será enviada al motor de bases 
de datos será:</FONT></P>
<P><FONT face=Courier><FONT color=#000080>
<TABLE style="BORDER-COLLAPSE: collapse" borderColor=#000000 cellSpacing=0 
cellPadding=0 width="100%" border=0>
  <TBODY>
  <TR>
    <TD><FONT size=2><FONT color=#000080>DECLARE @MiVariable 
      NUMERIC(10)<BR><FONT face=Tahoma size=2><FONT face=Courier>SET @MiVariable 
      = NULL</FONT></FONT></FONT></FONT></TD>
    <TD><FONT size=2>&nbsp;<FONT face=Tahoma color=#000080><STRONG>Instrucción 
      SQL Inicial</STRONG></FONT></FONT></TD></TR>
  <TR>
    <TD><FONT color=#ff00ff size=2>SET @MiVariable = 55.00</FONT></TD>
    <TD><FONT size=2>&nbsp;<FONT face=Tahoma 
      color=#ff00ff><STRONG>Transformación de 
    parámetros</STRONG></FONT></FONT></TD></TR>
  <TR>
    <TD><FONT color=#008080 size=2>EXEC P_MiProcedimiento 
@MiVariable</FONT></TD>
    <TD><FONT size=2>&nbsp;<FONT face=Tahoma color=#008080><STRONG>Instrucción 
      SQL 
Final</STRONG></FONT></FONT></TD></TR></TBODY></TABLE></FONT></FONT></FONT></P>
<P><FONT face=Tahoma size=4><STRONG>Uso de la característica 
Intelliprompt</STRONG></FONT></P>
<P><FONT face=Tahoma size=2><IMG alt="" src="IMAGES/Intelliprompt.png"></FONT></P>
<P><FONT face=Tahoma size=2>Esta característica ayuda al diseñador que redacta 
la instrucción SQL al ofrecerle una lista de objetos como tablas, vistas, 
campos, procedimientos y palabras clave de SQL, cada vez que presiona 
determinadas teclas.<BR>Esta opción se activa desde las preferencias del 
usuario, pero debe tenerse en cuenta que de estar activada, cada vez que se 
inicie el diseño de una consulta, ya sea nueva o existente, el sistema deberá 
reconocer y actualizar todos estos objetos, con lo cual la demora en la carga de 
la ventana será significativa en la medida que la cantidad de objetos sea 
considerable.</FONT></P>
<P><FONT face=Tahoma size=4><STRONG>Buscar y reemplazar</STRONG></FONT></P>
<P><FONT face=Tahoma size=2><IMG alt="" src="IMAGES/FindReplace.png"></FONT></P>
<P><FONT face=Tahoma size=2>La función de buscar y reemplazar le permitirá al 
programador de la instrucción buscar una determinada porción de texto y, 
eventualmente reemplazarla por otra. Para ello, deberá ejecutar el comando 
correspondiente desde el menú contextual que aparece al presionar el botón 
derecho sobre cualquier cuadro de texto de edición SQL.</FONT></P>
<P><FONT face=Tahoma size=4><STRONG>Insertar variables</STRONG></FONT></P>
<P><FONT face=Tahoma size=2><IMG alt="" src="IMAGES/Variables.png"></FONT></P>
<P><FONT face=Tahoma size=2>Desde el mismo menú contextual mencionado en el 
párrafo anterior, se ingresa al cuadro de diálogo de inserción de variables 
globales, tema que será tratado en profundidad más adelante en este 
capítulo.</FONT></P>
<P><FONT face=Tahoma size=2></FONT>&nbsp;</P></BODY>
</html>
