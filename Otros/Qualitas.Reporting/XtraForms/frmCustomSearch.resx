<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABFFJREFUWEftl11Q
        VVUUx69PvfXkTNOLL6U92IP1YGlmQ2ni+J1CTX7UlCV+kKOoqIRQKGKBmYigiMKYo4IgGF/CVYQQBRUH
        gtG8Kt+XZpR7QeySMMO/+S9m3zmee87lkDPSQ8zsufey9zr7t9Z/rbX3GQPANqp/BBjNMaqbS/SteF9T
        34Q132VhZcQJnMqrRH9/v21wcFBsC8rqvXNlVb9jYGDAO2fl2ZYADmbfQt19D85XO7H1p/Po6uqyEYIb
        6OfcbreNEFY2txyBhF9qYb/5CIdy72Dt92fQ3t6Ovr4+2UQ/19HR4Z2zAmFKWn61AXGpduxIKkPYD/kI
        iTqN5ZuOYvGaA0g9UYze3l5bdkmd/D827Qqik8uxLiYbS9YmYeGXO1FYetmSHKYAcWkV6PUAf3YDDa1A
        8c0nOF7Sjn0n67Bi8zFMXRSB+OM3cMcJuB4Prfm15jEO5zkQc7gSAcGR6O7uHlYOU4A96TVobAOq7wJ5
        V4fCH3XwElbtOIW35m/Fm7PD8Mn6QwJW2zS0JjGzQaL18TcpeC84Gk6n06akMpPDB+BeSydSsq7LhvSW
        SRe6Mwefh2dI+AM/24PpQVF4/YNQzFi6S4B2HakSOOYHJVBrAoK2oMjuXwofAIY5/9pf4hUl6HQD9S1P
        S0C9X5seIuuUBFxDCQhOCTb9WCBj0qwNfqXwAUjLv48DWY3Iuew2lGB1dKZ4+crUldi2rwSFN/oMJWB0
        ON4I3OhXCh+A5JzbApB7pUcArt2DfKdn9PzryJMixavvfCUARbV/CwDXaHNAATACbW1t8Hg8hvn23wNg
        9msjoK8CSsAIKAlUBPRVMKIIVF2/jb0Zv0ldM8xMHjaYpRuPiI6seZbdxPfXeQcBWI6qElgNlOTbxAti
        S8gPl+/GtMWRmDwvHFPmhqL0UrVPcxIJtsfnSEa3PACe9AOtD4GLjUBGcat0OQLRcwKMnRiEtxdsw/rY
        XPnk74j9dq+9me2ysDSB6Onpeao5DQH8XCphv9AwKGVVcQtIL2oRb2hIL+kFAV4YFyglyGbDT/7W2pvZ
        Tnh3ldjrm5MA0AMF4Oj0D+BwONDc3CyZrYbWfjgAfUUIALXTAxwtaJIIqDxgBNj9uLnL5bKxrNTQ2hPA
        yFZF4JkBjGr6uQFQQ38ATFxG4Fhhszd/Zi6LlfxhBBhBwwjwwLEigRmA1t6fBH4BWHJsux0uSGvNqngI
        NiVeMpjxc76IN/SAOUQAVg3taZtZ/kBseToGhyZj1oo4TFm4XarANAKs85Szf8i5nnrurhzDi0L2y2Hy
        8qRP8eL4BYYPUADK3szW9lKAOUD43mJpNFqALQlF+Gh1ohynwwFo7QlgZOsXwF5ZZ9huqZm2/cYkpMPo
        0mlkr7flc5JST/vYSx/gNZrXaT5c22D03znPHqCu5OqaNRJ7/bVdAPiSwYfw/qZtMPrvnNe+lCiAkdjr
        X1wsv0BYueP/mzX/A/wDz9QzG1NOdo4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAVCsTAGQoEAB4ORwAdT0jAH1EKAB3RUUAiFA1AJdbOwCOXEAAlmRHAKZmRAC7iW8AuIB3AL+M
        cwDTtZMA1LKdANq4pQDpxbAA5sy/AO3h3QD7+PgA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoJBQQCAgAAAAoJBQQCAgAKFREOCAIAAAAKFREOCAIAChURDgsC
        AAAAChURDgsCAAoVEQ4LAgAAAAoVEQ4LAgAKFREOCwIAAAAKFREOCwIACgcHAwMCAgEKBwcDAwICAA8K
        ExMMCAIHChMTDAgCBgAAChUUEggCDQoVFBIIBgAAAAAKBwUCAgcKBwUCAgAAAAAAChUQCAIAChUQCAIA
        AAAAAAoHBQIHAAoHBQIHAAAAAAAAChUCAAAAChUCAAAAAAAAAAoKBwAAAAoKBwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAADgQAAA4EAAAOBAAADgQAAA4EAAAABAAAAAQAAgAMAAMAH
        AADBBwAAwQcAAOOPAADjjwAA//8AAP//AAA=
</value>
  </data>
</root>